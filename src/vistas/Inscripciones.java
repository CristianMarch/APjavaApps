package vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadproject.AccesoADatos.*;
import universidadproject.Entidades.*;

public class Inscripciones extends javax.swing.JInternalFrame {
    private Alumno alumno = new Alumno();
    private Materia materia = new Materia();
    private AlumnoData dataAlumno = new AlumnoData();
    private MateriaData dataMateria = new MateriaData();
    private InscripcionData dataIns = new InscripcionData();
    private ArrayList<Alumno> lista = dataAlumno.listarAlumnos();
    private int idAlumno;
    private int idMateria;
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };
    private DefaultTableModel modelo2 = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    public Inscripciones() {
        initComponents();
        armarTablaAlumnos();
        armarTablaInscripciones();
        cargarTablaAlumnos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcbBuscador = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAlumnos = new javax.swing.JTable();
        jtBuscador = new javax.swing.JTextField();
        jbInscritas = new javax.swing.JButton();
        jbNOInscritas = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtInscripciones = new javax.swing.JTable();
        jbInscribir = new javax.swing.JButton();
        jbDesinscribir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setText("Seleccione alumno:");

        jcbBuscador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buscar por ...", "Por ID", "Por DNI", "Por Nombre" }));
        jcbBuscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBuscadorActionPerformed(evt);
            }
        });

        jtAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtAlumnos);

        jtBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtBuscadorKeyReleased(evt);
            }
        });

        jbInscritas.setText("Materias Inscriptas");
        jbInscritas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscritasActionPerformed(evt);
            }
        });

        jbNOInscritas.setText("Materias no Inscriptas");
        jbNOInscritas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNOInscritasActionPerformed(evt);
            }
        });

        jtInscripciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtInscripciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtInscripcionesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtInscripciones);

        jbInscribir.setText("Inscribir");
        jbInscribir.setPreferredSize(new java.awt.Dimension(133, 32));
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbDesinscribir.setText("Anular Inscripcion");
        jbDesinscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDesinscribirActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Listado de Materias");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Formulario Inscripcion");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jbInscritas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbNOInscritas))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 44, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbDesinscribir)
                        .addGap(130, 130, 130))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(133, 133, 133))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcbBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jtBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jtBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscritas)
                    .addComponent(jbNOInscritas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbDesinscribir))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbDesinscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDesinscribirActionPerformed
        // TODO add your handling code here:
        if(materia == null){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Materia");
        }else{
            dataIns.borrarInscripcionAlumnoMateria(idAlumno, idMateria);
        }
    }//GEN-LAST:event_jbDesinscribirActionPerformed

    private void jtBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBuscadorKeyReleased
        // TODO add your handling code here:
        borrarFilas();
        String variable = null;
        for (Alumno alumno : lista) {
            
            switch(jcbBuscador.getSelectedIndex()){
                case 1:
                    variable = alumno.getIdAlumno() + "";
                    break;
                case 2:
                    variable = alumno.getDni() + "";
                    break;
                case 3:
                    variable = alumno.getNombre();
                    break; 
            }
            
            if (variable.startsWith(jtBuscador.getText())) {
                modelo.addRow(new Object[]{
                    alumno.getIdAlumno(),
                    alumno.getDni(),
                    alumno.getApellido(),
                    alumno.getNombre()
                });
            }else if(jtBuscador.getText().isEmpty()){
                modelo.addRow(new Object[]{
                    alumno.getIdAlumno(),
                    alumno.getDni(),
                    alumno.getApellido(),
                    alumno.getNombre()
                });
            }
        }   

    }//GEN-LAST:event_jtBuscadorKeyReleased

    private void jcbBuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBuscadorActionPerformed
        // TODO add your handling code here:
        //JOpt ionPane.showMessageDialog(null, jcbBuscador.getSelectedIndex());
    }//GEN-LAST:event_jcbBuscadorActionPerformed

    private void jtAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtAlumnosMouseClicked
        // TODO add your handling code here:
        int i = jtAlumnos.getSelectedRow();
        idAlumno = (int)jtAlumnos.getValueAt(i, 0);
        alumno = dataAlumno.buscarAlumnoPorId(idAlumno);
    }//GEN-LAST:event_jtAlumnosMouseClicked

    private void jbInscritasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscritasActionPerformed
        // TODO add your handling code here:
        borrarFilasInscripciones();
        jbDesinscribir.setEnabled(false);
        jbInscribir.setEnabled(true);
        ArrayList<Materia> listaIns = dataIns.obtenerMateriasCursadas(idAlumno);
        for(Materia materia:listaIns){
            modelo.addRow(new Object[]{
                materia.getIdMateria(),
                materia.getNombre(),
                materia.getAnioMateria()
            });
        }
    }//GEN-LAST:event_jbInscritasActionPerformed

    private void jbNOInscritasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNOInscritasActionPerformed
        // TODO add your handling code here:
        borrarFilasInscripciones();
        jbInscribir.setEnabled(false);
        jbDesinscribir.setEnabled(true);
        ArrayList<Materia> listaIns = dataIns.obtenerMateriasNOCursadas(idAlumno);
        for(Materia materia:listaIns){
            modelo.addRow(new Object[]{
                materia.getIdMateria(),
                materia.getNombre(),
                materia.getAnioMateria()
            });
        }
    }//GEN-LAST:event_jbNOInscritasActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        // TODO add your handling code here:
        if(materia == null){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Materia");
        }else{
            Inscripcion inscripcion = new Inscripcion(0, alumno, materia);
            dataIns.guardarInscripcion(inscripcion);
        }
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jtInscripcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtInscripcionesMouseClicked
        // TODO add your handling code here:
        int i = jtInscripciones.getSelectedRow();
        idMateria = (int) jtInscripciones.getValueAt(i, 0);
        materia = dataMateria.buscarMateria(idMateria);
    }//GEN-LAST:event_jtInscripcionesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbDesinscribir;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbInscritas;
    private javax.swing.JButton jbNOInscritas;
    private javax.swing.JComboBox<String> jcbBuscador;
    private javax.swing.JTable jtAlumnos;
    private javax.swing.JTextField jtBuscador;
    private javax.swing.JTable jtInscripciones;
    // End of variables declaration//GEN-END:variables

    private void armarTablaAlumnos() {
        modelo.addColumn("ID");
        modelo.addColumn("DNI");
        modelo.addColumn("Apellido");
        modelo.addColumn("Nombre");
        jtAlumnos.setModel(modelo);
    }

    private void armarTablaInscripciones() {
        modelo2.addColumn("ID");
        modelo2.addColumn("Nombre Materia");
        modelo2.addColumn("Año");
        jtInscripciones.setModel(modelo2);
    }

    private void cargarTablaAlumnos() {
        for(Alumno alumno:lista){
            modelo.addRow(new Object[]{
                alumno.getIdAlumno(),
                alumno.getDni(),
                alumno.getApellido(),
                alumno.getNombre()
            });
        }
    }

    private void borrarFilasInscripciones() {
        int f = jtInscripciones.getRowCount()-1;
        for(;f>=0;f--){
            modelo.removeRow(f);
        }
    }
    
    private void borrarFilas(){
        int f =  jtAlumnos.getRowCount()-1;
        for(;f >= 0; f--){
            modelo.removeRow(f);
        }
    }
}
